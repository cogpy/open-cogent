name: Build Images

on:
  workflow_call:
    inputs:
      build-type:
        type: string
        required: true
      app-version:
        type: string
        required: true
      git-short-hash:
        type: string
        required: true

permissions:
  contents: 'write'
  id-token: 'write'
  packages: 'write'

jobs:
  build-server-native:
    name: Build Server native - ${{ matrix.targets.name }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.build-type }}
    strategy:
      fail-fast: false
      matrix:
        targets:
          - name: x86_64-unknown-linux-gnu
            file: server-native.x64.node
          - name: aarch64-unknown-linux-gnu
            file: server-native.arm64.node
          - name: armv7-unknown-linux-gnueabihf
            file: server-native.armv7.node

    steps:
      - uses: actions/checkout@v4
      - name: Setup Version
        uses: ./.github/actions/setup-version
        with:
          app-version: ${{ inputs.app-version }}
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          electron-install: false
          extra-flags: workspaces focus @afk/server-native
      - name: Build Rust
        uses: ./.github/actions/build-rust
        with:
          target: ${{ matrix.targets.name }}
          package: '@afk/server-native'
      - name: Rename ${{ matrix.targets.file }}
        run: |
          mv ./packages/backend/native/server-native.node ./packages/backend/native/${{ matrix.targets.file }}
      - name: Upload ${{ matrix.targets.file }}
        uses: actions/upload-artifact@v4
        with:
          name: server-native-${{ matrix.targets.file }}
          path: ./packages/backend/native/${{ matrix.targets.file }}
          if-no-files-found: error

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    environment: ${{ inputs.build-type }}
    needs: build-server-native
    steps:
      - uses: actions/checkout@v4
      - name: Setup Version
        uses: ./.github/actions/setup-version
        with:
          app-version: ${{ inputs.app-version }}

      # Download all built native modules
      - name: Download native artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: server-native-*
          path: ./packages/backend/native/
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          logout: false
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          provenance: true
          file: .github/Dockerfile.multiarch
          tags: ghcr.io/afk-surf/open-agent:${{inputs.build-type}}-${{ inputs.git-short-hash }}
